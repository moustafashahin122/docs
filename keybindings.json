// Empty
[
    {
        "key": "ctrl+k z",
        "command": "-workbench.action.toggleZenMode"
    },
    {
        "key": "ctrl+u",
        "command": "workbench.action.debug.run"
    },
    {
        "key": "ctrl+f5",
        "command": "-workbench.action.debug.run"
    },
    {
        "key": "ctrl+i",
        "command": "workbench.action.debug.stop",
        "when": "inDebugMode"
    },
    {
        "key": "shift+f5",
        "command": "-workbench.action.debug.stop",
        "when": "inDebugMode"
    },
    {
        "key": "ctrl+f1",
        "command": "workbench.action.terminal.runActiveFile"
    },
    {
        "key": "pagedown",
        "command": "editor.action.copyLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+down",
        "command": "-editor.action.copyLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "pageup",
        "command": "editor.action.copyLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+up",
        "command": "-editor.action.copyLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+alt+p",
        "command": "workbench.action.pinEditor",
        "when": "!activeEditorIsPinned"
    },
    {
        "key": "ctrl+m shift+enter",
        "command": "-workbench.action.pinEditor",
        "when": "!activeEditorIsPinned"
    },
    {
        "key": "ctrl+alt+p",
        "command": "workbench.action.unpinEditor",
        "when": "activeEditorIsPinned"
    },
    {
        "key": "ctrl+m shift+enter",
        "command": "-workbench.action.unpinEditor",
        "when": "activeEditorIsPinned"
    },
    {
        "key": "ctrl+insert",
        "command": "editor.debug.action.selectionToWatch"
    },
    {
        "key": "ctrl+n",
        "command": "-workbench.action.files.newUntitledFile"
    },
    {
        "key": "insert",
        "command": "editor.action.inlineDiffs.acceptPartialEdit",
        "when": "editorHasPromptBar && editorPromptBarFocused"
    },
    {
        "key": "ctrl+shift+y",
        "command": "-editor.action.inlineDiffs.acceptPartialEdit",
        "when": "editorHasPromptBar && editorPromptBarFocused"
    },
    {
        "key": "ctrl+y",
        "command": "-editor.action.inlineDiffs.acceptPartialEdit",
        "when": "editorHasPromptBar && editorPromptBarFocused"
    },
    {
        "key": "insert",
        "command": "-editor.action.toggleOvertypeInsertMode"
    },
    {
        "key": "insert",
        "command": "editor.action.inlineDiffs.acceptPartialEdit",
        "when": "editorTextFocus && @inlineDiffs.acceptPartialEdit.isActiveEditorWithDiffs"
    },
    {
        "key": "ctrl+shift+y",
        "command": "-editor.action.inlineDiffs.acceptPartialEdit",
        "when": "editorTextFocus && @inlineDiffs.acceptPartialEdit.isActiveEditorWithDiffs"
    },
    {
        "key": "alt+insert",
        "command": "editor.action.inlineDiffs.rejectPartialEdit",
        "when": "editorHasPromptBar && editorPromptBarFocused"
    },
    {
        "key": "ctrl+n",
        "command": "-editor.action.inlineDiffs.rejectPartialEdit",
        "when": "editorHasPromptBar && editorPromptBarFocused"
    },
    {
        "key": "alt+insert",
        "command": "editor.action.inlineDiffs.rejectPartialEdit",
        "when": "editorTextFocus && @inlineDiffs.rejectPartialEdit.isActiveEditorWithDiffs"
    },
    {
        "key": "ctrl+n",
        "command": "-editor.action.inlineDiffs.rejectPartialEdit",
        "when": "editorTextFocus && @inlineDiffs.rejectPartialEdit.isActiveEditorWithDiffs"
    },
    {
        "key": "alt+insert",
        "command": "editor.action.simpleInlineDiffs.rejectAll",
        "when": "editorTextFocus && hasDisplayedSimpleDiff"
    },
    {
        "key": "ctrl+h",
        "command": "-editor.action.simpleInlineDiffs.rejectAll",
        "when": "editorTextFocus && hasDisplayedSimpleDiff"
    },
    {
        "key": "ctrl+right",
        "command": "-breadcrumbs.focusNext",
        "when": "breadcrumbsActive && breadcrumbsVisible"
    },
    {
        "key": "ctrl+right",
        "command": "-breadcrumbs.focusNextWithPicker",
        "when": "breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus && !treestickyScrollFocused"
    },
    {
        "key": "ctrl+right",
        "command": "-cursorWordAccessibilityRight",
        "when": "accessibilityModeEnabled && isWindows && textInputFocus && focusedView == 'workbench.panel.output'"
    },
    {
        "key": "ctrl+right",
        "command": "-cursorWordEndRight",
        "when": "textInputFocus && !accessibilityModeEnabled"
    },
    {
        "key": "ctrl+right",
        "command": "-gitlens.key.ctrl+right",
        "when": "gitlens:key:ctrl+right"
    },
    {
        "key": "ctrl+right",
        "command": "-quickInput.acceptInBackground",
        "when": "cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick'"
    },
]